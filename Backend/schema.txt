User collection
{
   _id: ObjectId,
   name: String,
   email: String,
   password: String,
   houses: [
      {
         _id: ObjectId,
         address: String,
         city: String,
         state: String,
         rooms: [
            {
               _id: ObjectId,
               name: String,
               sensors: [
                  {
                     _id: ObjectId,
                     ref: 'Sensor',
                     type: String
                  }
               ]
            }
         ]
      }
   ]
}


Sensor collection
{
   _id: ObjectId,
   sensorType: String,
   location: String,
   house: {
      _id: ObjectId,
      address: String,
      city: String,
      state: String
   },
   readings: [
      {
         _id: ObjectId,
         timestamp: Date,
         temperature: Number,
         humidity: Number
      }
   ]
}

{
   _id: ObjectId,
   type: String,
   location: String,
   room: {
      _id: ObjectId,
      ref: 'Room'
   },
   readings: [
      {
         _id: ObjectId,
         timestamp: Date,
         temperature: Number,
         humidity: Number
      }
   ],
   devices: {
      lights: [
         {
            _id: ObjectId,
            name: String,
            status: Boolean
         }
      ],
      fan: {
         _id: ObjectId,
         name: String,
         speed: Number
      }
   }
}

const temperatureSchema = new mongoose.Schema({
  value: Number,
  timestamp: Date,
  sensor: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Sensor'
  }
});

const humiditySchema = new mongoose.Schema({
  value: Number,
  timestamp: Date,
  sensor: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Sensor'
  }
});

const lightSchema = new mongoose.Schema({
  value: Number,
  timestamp: Date,
  sensor: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Sensor'
  }
});

const fanSchema = new mongoose.Schema({
  value: Number,
  timestamp: Date,
  sensor: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Sensor'
  }
});

const sensorSchema = new mongoose.Schema({
  name: String,
  location: String,
  room: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Room'
  },
  temperatureReadings: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Temperature'
  }],
  humidityReadings: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Humidity'
  }],
  lightReadings: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Light'
  }],
  fanReadings: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Fan'
  }]
});

const Room = mongoose.model('Room', roomSchema);
const Sensor = mongoose.model('Sensor', sensorSchema);
const Temperature = mongoose.model('Temperature', temperatureSchema);
const Humidity = mongoose.model('Humidity', humiditySchema);
const Light = mongoose.model('Light', lightSchema);
const Fan = mongoose.model('Fan', fanSchema);

